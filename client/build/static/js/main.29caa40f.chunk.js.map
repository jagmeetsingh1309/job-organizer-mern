{"version":3,"sources":["ss-img.png","Reducers/authReducer.js","Reducers/jobReducer.js","Reducers/alertReducer.js","Reducers/index.js","Actions/action-types.js","components/subcomponents/Alert.js","components/elements/Button.js","Actions/alertActions.js","components/subcomponents/Navbar.js","Actions/authActions.js","components/pages/Home.js","components/elements/Card.js","components/subcomponents/JobCard.js","Actions/jobActions.js","components/subcomponents/JobList.js","components/subcomponents/Header.js","components/elements/Grid.js","components/pages/Dashboard.js","components/elements/Form.js","components/subcomponents/RenderInput.js","components/subcomponents/RenderSelectInput.js","components/pages/JobForm.js","components/pages/LoginComponent.js","components/PrivateRoute.js","components/App.js","index.js"],"names":["module","exports","initialState","isLoggedIn","token","localStorage","getItem","userId","email","jobs","filteredJobs","currentJob","combineReducers","auth","state","action","type","payload","setItem","removeItem","job","map","_id","form","formReducer","alert","filter","id","AlertWrapper","styled","div","props","color","bgColor","connect","alertList","key","msg","length","Button","button","ButtonLink","BorderedButton","NavLink","BrandLink","setAlert","msgType","dispatch","getState","a","uuidv4","setTimeout","FlexContainer","NavLinks","Navbar","to","this","onClick","logoutUser","React","Component","FlexWrapper","Content","Image","img","Home","src","alt","Card","borderColor","ColorText","span","status","getJob","jobId","config","headers","axios","get","response","formatedAppliedOn","moment","data","appliedOn","format","className","title","company","address","Header","h2","JobList","FilterLink","FilterWrapper","isVisible","onClickHandler","setState","Fragment","e","handleFilterChange","target","value","GridWrapper","gap","css","GridCol","start","end","Dashboard","getJobs","filterJobs","Input","input","Select","select","Text","RenderInput","formProps","htmlFor","name","label","placeholder","meta","touched","error","RenderSelectInput","Wrapper","JobForm","isEditing","onSubmit","formValues","createdBy","editJob","history","push","addJob","match","path","buttonText","handleSubmit","style","marginTop","Field","component","initialValues","body","JSON","stringify","post","put","reduxForm","LoginComponent","loginMode","onSubmitHandler","loginUser","signupUser","helperText","validate","errors","password","message","rest","render","App","exact","ReactDOM","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","document","getElementById"],"mappings":"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","file":"static/js/main.29caa40f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ss-img.2281e675.png\";","import { LOGIN_SUCCESS,LOGIN_FAIL, LOGOUT } from '../Actions/action-types';\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    token: localStorage.getItem('token'),\r\n    userId: null,\r\n    email: null\r\n};\r\n\r\nexport default  (state=initialState,action) => {\r\n    const { type, payload } = action;\r\n    switch(type){\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                token: payload.token,\r\n                userId: payload.userId,\r\n                email: payload.email\r\n            };\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                token: null,\r\n                userId: null,\r\n                email: null\r\n            };\r\n        case LOGOUT:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                token: null,\r\n                userId: null,\r\n                email: null\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    GET_JOBS,\r\n    ADD_JOB,\r\n    FILTER_JOBS,\r\n    GET_JOB,\r\n    EDIT_JOB\r\n} from '../Actions/action-types';\r\n\r\nconst initialState = {\r\n    jobs: [],\r\n    filteredJobs: [],\r\n    currentJob: null\r\n};\r\n\r\nexport default (state = initialState,action) => {\r\n    const { type,payload } = action;\r\n    switch(type){\r\n        case GET_JOBS:\r\n            return {\r\n                ...state,\r\n                jobs: payload,\r\n                filteredJobs: payload\r\n            };\r\n        case FILTER_JOBS:\r\n            return {\r\n                ...state,\r\n                filteredJobs: [ ...payload]\r\n            };\r\n        case ADD_JOB:\r\n            return {\r\n                ...state,\r\n                jobs: [ ...state.jobs, payload.job],\r\n                filteredJobs: [ ...state.jobs, payload.job]\r\n            };\r\n        case GET_JOB:\r\n            return {\r\n                ...state,\r\n                currentJob: payload\r\n            };\r\n        case EDIT_JOB:\r\n            return {\r\n                ...state,\r\n                currentJob: payload,\r\n                jobs: state.jobs.map(job => {\r\n                    if(job._id === payload._id){\r\n                        return payload;\r\n                    } \r\n                    return job;\r\n                }),\r\n                filteredJobs: state.jobs.map(job => {\r\n                    if(job._id === payload._id){\r\n                        return payload;\r\n                    } \r\n                    return job;\r\n                })\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_ALERT, REMOVE_ALERT } from '../Actions/action-types';\r\n\r\nconst initialState = [];\r\n\r\nexport default (state = initialState, action) => {\r\n    const { type,payload } = action;\r\n    switch(type){\r\n        case SET_ALERT:\r\n            return [\r\n                ...state,\r\n                payload\r\n            ];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default: \r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nimport authReducer from './authReducer';\r\nimport jobReducer from './jobReducer';\r\nimport alertReducer from './alertReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    jobs: jobReducer,\r\n    form: formReducer,\r\n    alert: alertReducer\r\n});","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const GET_JOBS = 'GET_JOBS';\r\nexport const FILTER_JOBS = 'FILTER_JOBS';\r\nexport const ADD_JOB = 'ADD_JOB';\r\nexport const GET_JOB = 'GET_JOB';\r\nexport const EDIT_JOB = 'EDIT_JOB';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AlertWrapper = styled.div`\r\n    padding: 1rem 1.5rem;\r\n    width: 40%;\r\n    margin: 0 auto;\r\n    border: 2px solid ${props => props.color};\r\n    border-radius: 10px;\r\n    margin-bottom: 1rem;\r\n    color: ${props => props.color };\r\n    background: ${props => props.bgColor };\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst Alert = ({ alert }) => {\r\n    let alertList = alert.map(alert => {\r\n        let color = alert.type === 'danger' ? '#fa0000' : 'green';\r\n        let bgColor = alert.type === 'danger' ? '#fa8787' : 'white';\r\n        return <AlertWrapper key={alert.id} color={color} bgColor={bgColor} >{alert.msg}</AlertWrapper>;   \r\n    });\r\n    if(alert.length > 0){\r\n        return alertList;\r\n    } \r\n    return null;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        alert: state.alert\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Alert);","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n    width: 100%;\r\n    text-align: center;\r\n    background: ${props => props.bgColor ? props.bgColor : '#7410e6'};\r\n    border-radius: 5px; \r\n    color: white;\r\n    border: none;\r\n    outline: none;\r\n    padding: 0.75rem 1.5rem;\r\n    margin-top: 1rem;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const ButtonLink = styled.div`\r\n    a{\r\n        padding: 0.5rem 2rem;\r\n        text-align: center;\r\n        background: #7410e6;\r\n        border-radius: 5px; \r\n        color: white;\r\n        border: none;\r\n        outline: none;\r\n        text-decoration: none;\r\n    }\r\n   \r\n    a:hover{\r\n        border: 2px solid #7410e6;\r\n        color: #7410e6;\r\n        background: white;\r\n        transition: background 0.3s;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport const BorderedButton = styled.button`\r\n    padding: 0.5rem 1rem;\r\n    border: 3px solid ${props => props.color };\r\n    background: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    border-radius: 5px;\r\n\r\n    &:hover{\r\n        background: ${props => props.color };\r\n        color: white;\r\n        transition: background 0.4s;\r\n    }\r\n`;\r\n\r\nexport const NavLink = styled.div`\r\n    display: inline-block;\r\n    a{\r\n        text-decoration: none;\r\n        display: block;\r\n        color: blue;\r\n        font-size: 1.1rem;\r\n        padding: 0.5rem 1rem;\r\n        border-radius: 5px;\r\n    }\r\n    &:hover a{\r\n        color: white;\r\n        background: blue;\r\n        cursor: pointer;\r\n        transition: background 0.3s;\r\n    }\r\n`;\r\n\r\nexport const BrandLink = styled(NavLink)`\r\n    a{\r\n        font-size: 1.3rem;\r\n    }\r\n`;","import { v4 as uuidv4 } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './action-types';\r\n\r\nexport const setAlert = (msg,msgType) => {\r\n    return async function (dispatch, getState) {\r\n        const id = uuidv4();\r\n        dispatch({\r\n            type: SET_ALERT,\r\n            payload: {\r\n                id: id,\r\n                msg: msg,\r\n                type: msgType\r\n            }\r\n        });\r\n        setTimeout( () => dispatch({\r\n            type: REMOVE_ALERT,\r\n            payload: id\r\n        }), 5000);\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { NavLink,BrandLink } from '../elements/Button';\r\nimport { logoutUser } from '../../Actions/authActions';\r\n\r\nconst FlexContainer = styled.div`\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nconst NavLinks = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nclass Navbar extends React.Component{\r\n\r\n    render(){\r\n        return (\r\n            <FlexContainer>\r\n                <BrandLink><Link to=\"/\">Applyist</Link></BrandLink>\r\n                {!this.props.isLoggedIn ? (\r\n                    <NavLinks>\r\n                        <NavLink><Link to=\"/\">Home</Link></NavLink>\r\n                        <NavLink><Link to=\"/login\">Login</Link></NavLink>\r\n                        <NavLink><Link to=\"/signup\">Signup</Link></NavLink>\r\n                    </NavLinks>\r\n                ): (\r\n                    <NavLinks>\r\n                        <NavLink><Link to=\"/dashboard\">{this.props.email}</Link></NavLink>\r\n                        <NavLink><Link to=\"/\" onClick={this.props.logoutUser}>Logout</Link></NavLink>\r\n                    </NavLinks>\r\n                )} \r\n            </FlexContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        email: state.auth.email,\r\n        isLoggedIn: state.auth.isLoggedIn\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{\r\n    logoutUser: logoutUser\r\n})(Navbar);","import axios from 'axios';\r\n\r\nimport { \r\n    LOGIN_SUCCESS, \r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL\r\n} from './action-types';\r\nimport { setAlert } from './alertActions';\r\n\r\nexport const loginUser = (data,history) => {\r\n    return async function (dispatch,getState){\r\n        try{\r\n            const body = JSON.stringify(data);\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            const response = await axios.post('http://localhost:8000/login',body,config);\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: response.data\r\n            });\r\n            history.push('/dashboard');\r\n        } catch(error){\r\n            dispatch(setAlert(error.response.data.message,'danger'));\r\n            dispatch({\r\n                type: LOGIN_FAIL\r\n            });\r\n            history.push('/login');\r\n        }\r\n    }\r\n};\r\n\r\nexport const logoutUser = () => {\r\n    return {\r\n        type: LOGOUT\r\n    };\r\n}\r\n\r\nexport const signupUser = (data,history) => {\r\n    return async function (dispatch,getState){\r\n        try{\r\n            const body = JSON.stringify(data);\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            const response = await axios.post('http://localhost:8000/register',body,config);\r\n            dispatch({\r\n                type: SIGNUP_SUCCESS,\r\n                payload: response.data\r\n            });\r\n            history.push('/login');\r\n        } catch(error){\r\n            dispatch(setAlert(error.response.data.message,'danger'));\r\n            dispatch({\r\n                type: SIGNUP_FAIL\r\n            });\r\n            history.push('/signup');\r\n        }\r\n    }   \r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport img from '../../ss-img.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ButtonLink } from '../elements/Button';\r\n\r\nconst FlexWrapper = styled.div`\r\n    width: 90%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 90vh;\r\n    @media(max-width: 500px){\r\n        flex-wrap: wrap;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst Content = styled.div`\r\n    width: 50%;\r\n    margin-top: 5rem;\r\n    @media(max-width: 500px){\r\n        width: 100%;\r\n        text-align: center;\r\n        margin-top: 0;\r\n        margin-bottom: 2rem;\r\n    }\r\n`;\r\n\r\nconst Image = styled.img`\r\n    display: block;\r\n    height: 80%;\r\n    @media(max-width: 500px){\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst Home = () => {\r\n    return (\r\n        <FlexWrapper>\r\n            <Image src={img} alt=\"No img.\" />\r\n            <Content>\r\n                <h1>Organize Your Job Search</h1>\r\n                <p>\r\n                    During a job search its not uncommon to be applying to multiple companies\r\n                    at once. Keeping this process organized can be a pain, but not to worry,\r\n                    We are here to help. Create a free account and see if you can create a \r\n                    more organized search.\r\n                </p>\r\n                <ButtonLink><Link to=\"/signup\">Signup for free</Link></ButtonLink>\r\n            </Content>\r\n            \r\n        </FlexWrapper>\r\n        \r\n    );\r\n}\r\n\r\nexport default Home;","import styled from 'styled-components';\r\n\r\nconst Card = styled.div`\r\n    display: flex;\r\n    background: #f0edeb;\r\n    padding: 1rem 1.5rem;\r\n    border-radius: 10px;\r\n    border-left: 7px solid ${props => props.borderColor};\r\n    grid-column: 2 / span 8;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    @media(max-width:500px){\r\n        flex-wrap: wrap;\r\n        grid-column: 2 / span 10;\r\n    }\r\n`;\r\n\r\nexport default Card;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\n\r\nimport { getJob } from '../../Actions/jobActions';\r\nimport { ButtonLink } from '../elements/Button';\r\nimport Card from '../elements/Card';\r\n\r\nconst FlexContainer = styled.div`\r\n    display: flex;\r\n    p{\r\n        margin: 1rem 1rem 0 0;\r\n    }\r\n    flex-wrap: wrap;\r\n    @media(max-width:500px){\r\n        flex-wrap: wrap;\r\n        justify-content: space-between;\r\n        p {\r\n            margin-top: 0.5rem;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ColorText = styled.span`\r\n    color: ${props => props.color};\r\n`;\r\n\r\nconst borderColor = (status) => {\r\n    switch(status){\r\n        case 'Applied': \r\n            return 'blue';\r\n        case 'Under Review':\r\n            return 'yellow';\r\n        case 'Offer Received':\r\n            return 'green';\r\n        case 'Rejected':\r\n            return 'red';\r\n        default:\r\n            return 'black';\r\n    }\r\n}\r\n\r\nconst JobCard = (props) => {\r\n\r\n    const job = props.job;\r\n\r\n    return (\r\n        <Card borderColor={borderColor(job.status)}>\r\n            <div className=\"job-description\">\r\n                <h2>{job.title}</h2>\r\n                <FlexContainer>\r\n                    <p><i className=\"far fa-building\"></i> {job.company}</p>\r\n                    <p><i className=\"fas fa-map-marker-alt\"></i> {job.address}</p>\r\n                    <p>\r\n                        <i className=\"far fa-calendar-alt\"></i> Applied on: \r\n                        <Moment format=\"YYYY/MM/DD\">{job.appliedOn}</Moment>\r\n                    </p>\r\n                </FlexContainer>\r\n                <p>\r\n                    <i className=\"far fa-clock\"></i> Status: <ColorText color={borderColor(job.status)}>{job.status}</ColorText>\r\n                </p>\r\n            </div>\r\n            <div className=\"action-button\">\r\n                <ButtonLink><Link onClick={() => props.getJob(job._id)} to={`/edit-job/${job._id}`}>MODIFY</Link></ButtonLink>\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default connect(null,{\r\n    getJob: getJob\r\n})(JobCard);","import axios from 'axios';\r\nimport { \r\n    GET_JOBS,\r\n    ADD_JOB,\r\n    GET_JOB,\r\n    EDIT_JOB,\r\n    FILTER_JOBS\r\n} from '../Actions/action-types';\r\n\r\nimport moment from 'moment';\r\n\r\nexport const getJobs = () => {\r\n    return async function(dispatch,getState){\r\n        //get the token from local storage.\r\n        const token = localStorage.getItem('token');\r\n        const config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token \r\n            }\r\n        }\r\n        const response = await axios.get('http://localhost:8000/jobs',config);\r\n        dispatch({\r\n            type: GET_JOBS,\r\n            payload: response.data.jobs\r\n        });\r\n    }\r\n};\r\n\r\nexport const filterJobs = (filter) => {\r\n    return async function(dispatch,getState){\r\n        let jobs = getState().jobs.jobs;\r\n        let filteredJobs = jobs.filter(job => job.status === filter);\r\n        dispatch({\r\n            type: FILTER_JOBS,\r\n            payload: filteredJobs\r\n        })\r\n    }\r\n}\r\n\r\nexport const addJob = (job) => {\r\n    return async function(dispatch,getState){\r\n        const token = localStorage.getItem('token');\r\n        const body = JSON.stringify(job);\r\n        const config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const response = await axios.post('http://localhost:8000/add-job',body,config);\r\n        dispatch({\r\n            type: ADD_JOB,\r\n            payload: response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getJob = (jobId) => {\r\n    return async function(dispatch,getState){\r\n        const token = localStorage.getItem('token');\r\n        const config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }\r\n        const response = await axios.get(`http://localhost:8000/job/${jobId}`,config);\r\n        let formatedAppliedOn = moment(response.data.job.appliedOn).format('YYYY-MM-DD');\r\n        dispatch({\r\n            type: GET_JOB,\r\n            payload: {\r\n                ...response.data.job,\r\n                appliedOn: formatedAppliedOn\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport const editJob = (job) => {\r\n    return async function(dispatch,getState){\r\n        const token = localStorage.getItem('token');\r\n        const body = JSON.stringify(job);\r\n        const config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const response = await axios.put(`http://localhost:8000/job/${job._id}/edit`,body,config);\r\n        let formatedAppliedOn = moment(response.data.job.appliedOn).format('YYYY-MM-DD');\r\n        dispatch({\r\n            type: EDIT_JOB,\r\n            payload: {\r\n                ...response.data.job,\r\n                appliedOn: formatedAppliedOn\r\n            }\r\n        });\r\n    }\r\n};","import React from 'react';\r\nimport JobCard from './JobCard';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.h2`\r\n    grid-column: 2 / span 8;\r\n`;\r\n\r\nconst JobList = ({ jobs }) => {\r\n    if(jobs.length > 0){\r\n        return jobs.map(job => {\r\n            return <JobCard key={job._id} job={job}/>\r\n        });\r\n    } else {\r\n        return <Header>No jobs found.</Header>;\r\n    }\r\n};\r\n\r\nexport default JobList;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { BorderedButton,ButtonLink } from '../elements/Button';\r\n\r\nconst FlexContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    grid-column: 2 / span 8;\r\n    @media(max-width:500px){\r\n        grid-column: 2/ span 10;\r\n    } \r\n`;\r\n\r\nconst FilterLink = styled.button`\r\n    text-decoration: underline;\r\n    border: none;\r\n    outline: none;\r\n    background: none;\r\n    cursor: pointer;\r\n    font-size: 1.1rem;\r\n    color: #a6a2ab;\r\n`;\r\n\r\nconst FilterWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background: #f0f0f0;\r\n    grid-column: 2 / span 8;\r\n    padding: 0.5rem;\r\n    @media(max-width: 500px){\r\n        grid-column: 2 / span 10;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n        align-content: space-between;\r\n        button{\r\n            margin: 0.75rem 0.75rem 0 0;\r\n        }\r\n    }\r\n`;\r\n\r\nclass Header extends React.Component {\r\n\r\n    state = {\r\n        isVisible: false\r\n    }\r\n\r\n    onClickHandler = () => {\r\n        this.setState({ isVisible: !this.state.isVisible });\r\n    }\r\n  \r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <FlexContainer>\r\n                    <ButtonLink><Link to=\"/add-job\">ADD JOB</Link></ButtonLink>\r\n                    <FilterLink onClick={this.onClickHandler}>\r\n                        Filter <i className=\"fas fa-caret-down\"></i>\r\n                    </FilterLink>\r\n                </FlexContainer>\r\n                { this.state.isVisible && <FilterWrapper>\r\n                        <BorderedButton \r\n                            onClick={(e) => this.props.handleFilterChange(e.target.value)} color=\"black\" value=\"Show All\"\r\n                        >Show All</BorderedButton>\r\n                        <BorderedButton \r\n                            onClick={(e) => this.props.handleFilterChange(e.target.value)} color=\"blue\" value=\"Applied\"\r\n                        >Applied</BorderedButton>\r\n                        <BorderedButton \r\n                            onClick={(e) => this.props.handleFilterChange(e.target.value)} color=\"#f5e90a\" value=\"Under Review\"\r\n                        >Under Review</BorderedButton>\r\n                        <BorderedButton \r\n                            onClick={(e) => this.props.handleFilterChange(e.target.value)} color=\"green\" value=\"Offer Received\"\r\n                        >Offer Recieved</BorderedButton>\r\n                        <BorderedButton \r\n                            onClick={(e) => this.props.handleFilterChange(e.target.value)} color=\"red\" value=\"Rejected\"\r\n                        >Rejected</BorderedButton>\r\n                    </FilterWrapper>\r\n                }\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import styled, { css } from 'styled-components';\r\n\r\nexport const GridWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(12,1fr);\r\n    ${props => props.gap ? css`\r\n        grid-gap: ${props.gap}\r\n    `: ''};\r\n`;\r\n\r\nexport const GridCol = styled.div`\r\n    grid-column: ${props => props.start } / ${props => props.end};\r\n`;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getJobs,filterJobs } from '../../Actions/jobActions';\r\nimport JobList from '../subcomponents/JobList';\r\nimport Header from '../subcomponents/Header';\r\nimport { GridWrapper } from '../elements/Grid';\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getJobs();\r\n    }\r\n\r\n    handleFilterChange = (filter) => {\r\n        if(filter === 'Show All'){\r\n            this.props.getJobs();\r\n        } else {\r\n            this.props.filterJobs(filter);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <GridWrapper gap=\"1rem\">\r\n                <Header handleFilterChange={this.handleFilterChange} /> \r\n                <JobList jobs={this.props.jobs} />\r\n            </GridWrapper>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jobs: state.jobs.filteredJobs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{\r\n    getJobs: getJobs,\r\n    filterJobs: filterJobs\r\n})(Dashboard);","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n    padding: 1rem 0.5rem;\r\n    outline: none;\r\n    border: 2px solid ${props => props.borderColor};\r\n    border-radius: 5px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n    width: 100%;\r\n    padding: 1rem 0.5rem;\r\n    -webkit-appearence: none;\r\n    outline: none;\r\n    line-height: 1.5;\r\n    border: 2px solid #d4d2d2;\r\n    border-radius: 5px;\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Input } from '../elements/Form';\r\n\r\nconst Text = styled.span`\r\n    color: red;\r\n`;\r\n\r\nconst RenderInput = (formProps) => {\r\n    return (\r\n        <div>\r\n            <label htmlFor={formProps.input.name}>{formProps.label}</label>\r\n            <Input \r\n                {...formProps.input} \r\n                type={formProps.type} \r\n                placeholder={formProps.placeholder} \r\n                borderColor={formProps.meta.touched && formProps.meta.error ? 'red' : '#d4d2d2'}\r\n            />\r\n            {formProps.meta.touched && <Text>{formProps.meta.error}</Text>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RenderInput;","import React from 'react';\r\nimport { Select } from '../elements/Form';\r\n\r\nconst RenderSelectInput = (formProps) => {\r\n    return (\r\n        <div>\r\n            <label htmlFor={formProps.input.name}>{formProps.label}</label>\r\n            <Select {...formProps.input} >\r\n                <option>select Option</option>\r\n                <option value=\"Applied\">Applied</option>\r\n                <option value=\"Under Review\">Under Review</option>\r\n                <option value=\"Offer Received\">Offer Received</option>\r\n                <option value=\"Rejected\">Rejected</option>\r\n            </Select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RenderSelectInput;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm,Field } from 'redux-form';\r\n\r\nimport RenderInput from '../subcomponents/RenderInput';\r\nimport RenderSelectInput from '../subcomponents/RenderSelectInput';\r\nimport { addJob,editJob } from '../../Actions/jobActions';\r\nimport { Button } from '../elements/Button';\r\nimport { GridWrapper,GridCol } from '../elements/Grid';\r\n\r\nconst Wrapper = styled.div`\r\n    width: 80%;\r\n    margin: 0 auto;\r\n`;\r\n\r\nclass JobForm extends React.Component {\r\n\r\n    state = {\r\n        isEditing: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.match.path === '/edit-job/:jobId'){\r\n            this.setState({ isEditing: true });\r\n        }\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        const job = { ...formValues, createdBy: this.props.userId};\r\n        if(!this.state.isEditing){\r\n            this.props.addJob(job);\r\n            this.props.history.push('/dashboard');\r\n        } else {\r\n            this.props.editJob(job);\r\n            this.props.history.push('/dashboard');\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const title = this.state.isEditing ? 'Edit Job' : 'Add A Job';\r\n        const buttonText = this.state.isEditing ? 'Modify' : 'Submit';\r\n        return (\r\n            <Wrapper>\r\n                <h3>{title}</h3>\r\n                <Link to=\"/dashboard\"><i className=\"fas fa-arrow-circle-left\"></i> Back to dashboard</Link>\r\n                <form onSubmit={this.props.handleSubmit(this.onSubmit)} style={{ marginTop: '1rem'}}>\r\n                    <GridWrapper>\r\n                        <GridCol start=\"1\" end=\"6\">\r\n                            <Field type=\"text\" name=\"title\" \r\n                                placeholder=\"Senior Dog Walker\" \r\n                                label=\"Position Title\" component={RenderInput}\r\n                            />\r\n                            <Field type=\"text\" name=\"address\" \r\n                                placeholder=\"Hyderabad,India\" \r\n                                label=\"Location\" component={RenderInput}\r\n                            />\r\n                            <Field type=\"text\" name=\"company\" \r\n                                placeholder=\"Google\" label=\"Company\"\r\n                                component={RenderInput} \r\n                            />\r\n                        </GridCol>\r\n                        <GridCol start=\"7\" end=\"13\">\r\n                            <Field type=\"date\" name=\"appliedOn\" \r\n                                label=\"Date Applied\" component={RenderInput}\r\n                            />\r\n                            <Field name=\"status\" label=\"Current Status\" \r\n                                component={RenderSelectInput}\r\n                            />\r\n                        </GridCol>\r\n                    </GridWrapper> \r\n                    <Button type=\"submit\">{buttonText}</Button>       \r\n                </form>\r\n            </Wrapper>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state,props) => {\r\n    if(props.match.path === '/edit-job/:jobId'){\r\n        return {\r\n            userId: state.auth.userId,\r\n            initialValues: state.jobs.currentJob\r\n        };\r\n    } else {\r\n        return {\r\n            userId: state.auth.userId\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{\r\n    addJob: addJob,\r\n    editJob: editJob\r\n})(\r\n    reduxForm({\r\n        form: 'jobForm'\r\n    })(JobForm)\r\n);","import React from 'react';\r\nimport { Link,Redirect } from 'react-router-dom';\r\nimport { reduxForm,Field } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loginUser,signupUser } from '../../Actions/authActions';\r\nimport RenderInput from '../subcomponents/RenderInput';\r\nimport { Button } from '../elements/Button';\r\nimport { GridWrapper,GridCol } from '../elements/Grid';\r\n\r\n\r\nclass LoginComponent extends React.Component {\r\n\r\n    state = {\r\n        loginMode: true \r\n    }\r\n\r\n    onSubmitHandler = (formValues) => {\r\n        if(this.state.loginMode){\r\n            this.props.loginUser(formValues, this.props.history);\r\n        } else {\r\n            this.props.signupUser(formValues, this.props.history);\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        if(this.props.match.path === '/signup'){\r\n            this.setState({ loginMode: false });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let helperText,buttonText;\r\n\r\n        if(this.props.isLoggedIn){\r\n            return <Redirect to=\"/dashboard\" />\r\n        }\r\n\r\n        if(this.state.loginMode){\r\n            buttonText = 'Login';\r\n            helperText = 'New to applyist? ';\r\n        } else {\r\n            buttonText = 'Signup';\r\n            helperText = 'Already a member ';\r\n        }\r\n        \r\n        return (\r\n            <GridWrapper>\r\n                <GridCol start=\"3\" end=\"8\"> \r\n                    <form onSubmit={ this.props.handleSubmit(this.onSubmitHandler)}>\r\n                        <Field type=\"text\" placeholder=\"Enter Email\" \r\n                            name=\"email\" label=\"Email\" component={RenderInput} \r\n                        />\r\n                        <Field type=\"password\" placeholder=\"Enter password\" \r\n                            name=\"password\" label=\"Password\" component={RenderInput} \r\n                        />\r\n                        <Button type=\"submit\">{ buttonText }</Button>\r\n                    </form>\r\n                    <div><p>{ helperText }<Link to=\"/signup\">{ buttonText }</Link></p></div>\r\n                </GridCol>\r\n            </GridWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.auth.isLoggedIn\r\n    }\r\n}\r\n\r\nconst validate = formValues => {\r\n    let errors = {};\r\n    if(!formValues.email){\r\n        errors.email = 'Email cannot be empty';\r\n    }\r\n    if(!formValues.password){\r\n        errors.password = 'Password cannot be empty';\r\n    }else if(formValues.password.length < 8){\r\n        errors.password = 'Password must be 8 characters long';\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'loginForm',\r\n    validate: validate\r\n})(\r\n    connect(mapStateToProps,{\r\n        loginUser: loginUser,\r\n        signupUser: signupUser\r\n    })(LoginComponent)\r\n);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route,Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ isLoggedIn, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={ props => isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />    }\r\n        />\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.auth.isLoggedIn\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { BrowserRouter,Route } from 'react-router-dom';\r\n\r\nimport Alert from './subcomponents/Alert';\r\nimport Navbar from './subcomponents/Navbar';\r\nimport Home from './pages/Home';\r\nimport Dashboard from './pages/Dashboard';\r\nimport JobForm from './pages/JobForm';\r\nimport LoginComponent from './pages/LoginComponent';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <div>\r\n                <Navbar />\r\n                <Alert />\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/signup\" exact component={LoginComponent} />\r\n                <Route path=\"/login\" exact component={LoginComponent} />\r\n                <PrivateRoute path=\"/dashboard\" exact component={Dashboard} />\r\n                <PrivateRoute path=\"/add-job\" exact component={JobForm} />\r\n                <PrivateRoute path=\"/edit-job/:jobId\" exact component={JobForm} />\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore,applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducers from './Reducers/index';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={createStore(reducers, composeWithDevTools(applyMiddleware(thunk)))}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}